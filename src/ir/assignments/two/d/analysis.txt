Please place your analysis of the runtime complexity of your palindrome algorithm in this file.

Palindrome Complexity - Big O

Inside class PalindromeFrequencyCounter:

computePalindromeFrequency(ArrayList<String> words):


	Given that: words.length() is n

	1 for loop for individual words: n
	Nested for loop for phrases: n(n-1)

	1 for loop to add words and their corresponding frequency 	into a list: k (where k <= n)

	Collections.sort has a time complexity of n log(n)

So overall:

O(n + n(n-1) + k + n log(n)) --> O( n(n-1) + n log(n) ) --> O(n^2).


